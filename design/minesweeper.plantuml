@startuml

abstract class Model {
    void attach(View view)
    void detach(View view)
    void notifyViews()
}

class Board {

    static const bombPlaceholder = -1
    int[][] boardElems
    boolean[][] coveredElems

    Board(Board b)
    Board(int cols, int rows, int mines)

    GameStatus uncover(int x, int y)

    int rows()
    int cols()
    boolean covered(int x, int y)
    int boardValue(int x, int y)
}

enum GameStatus {
    WIN
    LOSE
    CONTINUE
}

enum Difficulty {
    EASY
    MEDIUM
    HARD
}

class BoardViewController {
    Board board

    BoardViewController(Board board)

    void update() override

    void paintComponent(Graphics g) override

    void mouseClicked(MouseEvent e) override
    void mouseEntered(MouseEvent e) override
    void mouseExited(MouseEvent e) override
    void mousePressed(MouseEvent e) override
    void mouseReleased(MouseEvent e) override
}

interface View {
    abstract void update()
}

class Game {
    Board board
    View view

    Game(Board board, View view)
}

interface java.awt.event.MouseListener
class javax.swing.JPanel

interface Controller

Model <|-- Board
Controller <|-- BoardViewController
View <|-- BoardViewController
java.awt.event.MouseListener <|-- BoardViewController
javax.swing.JPanel <|-- BoardViewController

@enduml
